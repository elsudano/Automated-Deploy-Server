- name: Tasks to put in production
  tags: [ 'production' ]
  block:
    - name: Enable and start the firewalld service
      service:
        name: firewalld
        state: started
        enabled: true
      when: (ansible_facts['distribution'] == "CentOS" and ansible_facts['distribution_major_version'] == "7")

    - name: Set authorized key taken from file for root
      authorized_key:
        user: root
        state: present
        key: "{{ gn_file_pub_rsa_pro }}"

    - name: Set authorized key taken from file for "{{ dk_name_user }}"
      authorized_key:
        user: "{{ dk_name_user }}"
        state: present
        key: "{{ gn_file_pub_rsa_pro }}"

    - name: Check if certificate already exists.
      stat:
        path: /etc/letsencrypt/live/{{ dk_domain }}/fullchain.pem
      register: letsencrypt_cert

    - name: Generate new certificate if one doesn't exist.
      shell: "certbot-2 certonly --dns-ovh --dns-ovh-credentials {{ dk_config_folder }}/ovh.ini --non-interactive --agree-tos --email {{ le_email }} -d *.{{ dk_domain }} -d {{ dk_domain }}"
      when: letsencrypt_cert.stat.exists == false and le_debug == false

    - name: Enable HTTP Strict Transport Security to Nextcloud
      lineinfile:
        path: "{{ dk_config_folder }}/nginx/site-confs/default"
        regexp: "{{ item.regex }}"
        line: "{{ item.line }}"
        state: present
      with_items:
        - { regex: '#add_header Strict-Transport-Security', line: 'add_header Strict-Transport-Security "max-age=15768000; includeSubDomains;" always;' }

    - name: Unset the deploying key in all users
      authorized_key:
        user: {{ item }}
        state: absent
        key: "{{ gn_file_pub_rsa_dev }}"
      with_item:
        - centos
        - root