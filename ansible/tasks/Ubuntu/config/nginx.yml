- name: Tasks for config Nginx
  tags: [ 'nginx' ]
  block:
    - name: Setting the correct interpreter of python 
      set_fact:
        ansible_python_interpreter: "/usr/bin/python3"
      tags: always

    - name: Check if WebServer root folder already exists.
      stat:
        path: "{{ dk_wserver_folder }}"
      register: root_dir

    - name: "Set the correct permissions in the WebServer folders ( {{ dk_wserver_folder }} )."
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ nx_name_user }}"
        group: "{{ nx_group_user }}"
        mode: "0775"
      when: root_dir.stat.exists
      with_items:
        - "{{ dk_wserver_folder }}"
        - "{{ dk_data_folder }}"
        - "{{ dk_app_folder }}"

    - name: Check if config folder already exists.
      stat:
        path: "{{ nx_enabled_folder }}"
      register: config_dir

    - name: If don't exist {{ nx_enabled_folder }} directory, I create it
      file:
        path: "{{ nx_enabled_folder }}"
        state: directory
        owner: "{{ nx_name_user }}"
        group: "{{ nx_group_user }}"
        mode: "0770"
      when: not config_dir.stat.exists

    # - name: Apply Nginx template
    #   template:
    #     src: nginx.conf.j2
    #     dest: "{{ nx_available_folder }}/myapps.conf"

    # - name: Enable new site
    #   file:
    #     src: "{{ nx_available_folder }}/myapps.conf"
    #     dest: "{{ nx_enabled_folder }}/myapps.conf"
    #     state: link

    - name: Adding existing Nginx user '{{ nx_name_user }}' to main group
      user:
        name: "{{ nx_name_user }}"
        groups: "{{ default_group_user }}"
        append: yes

    - name: Copy the test.php file to nginx folder
      copy:
        src: "files/{{ item }}"
        dest: "{{ dk_wserver_folder }}/{{ item }}"
        owner: "{{ nx_name_user }}"
        group: "{{ nx_group_user }}"
        mode: "0640"
      with_items:
        - test.php
        - favicon.ico
        - 404.gif
        - 400.html
        - 500.gif
        - 500.html

    - name: Enable the Nginx service
      service:
        name: nginx
        state: restarted
        enabled: yes
        force: yes
        daemon_reload: yes
      notify: Restart Nginx