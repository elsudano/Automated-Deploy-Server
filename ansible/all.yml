- name: Apply base configuration for anyone cloud
  hosts: 
    - all

  remote_user: root
  become_user: root
  become: true

  pre_tasks:
    - name: Including all vars to run all roles and tasks
      include_vars: vars/{{ ansible_distribution }}.yml
      tags: always

    - name: Including encrypt vars
      include_vars: vars/vault
      tags: always

  tasks:
    - name: Disable SELinux
      selinux:
        state: disabled

    - name: Upgrade all packages
      yum:
        name: '*'
        state: latest

    - name: Install dependencies for all playbooks
      yum:
        name: ['python36-PyMySQL']
        state: present

    - name: Disable IPv& for all interfaces
      sysctl:
        name: "{{ item.key }}"
        value: "{{ item.value }}"
        sysctl_set: yes
        state: present
        reload: yes
      with_items:
        - { key: net.ipv6.conf.all.disable_ipv6, value: 1 }
        - { key: net.ipv6.conf.default.disable_ipv6, value: 1 }

    # - name: Open requiered port in FirewallD
    #   firewalld:
    #     port: "{{ item.port }}"
    #     permanent: yes
    #     state: enabled
    #   with_items:
    #    - { port: 22/tcp }
    #    - { port: 443/tcp }
    #    - { port: 9090/tcp }
    #    - { port: 10000/tcp }

    - name: Disable and stop the firewalld service
      service:
        name: firewalld
        state: stopped
        enabled: false
      when: (ansible_facts['distribution'] == "CentOS" and ansible_facts['distribution_major_version'] == "7")
      tags: [ 'never', 'debug' ]

    - name: Change a root password
      user:
        name: root
        update_password: always
        password: "{{ root_password | password_hash('sha512') }}"

    - name: Ensure group {{ dk_group_user }} exists
      group:
        name: "{{ dk_group_user }}"
        gid: "{{ dk_gid_user }}"
        state: present

    - name: Create a user by default
      user:
        name: "{{ dk_name_user }}"
        uid: "{{ dk_uid_user }}"
        group: "{{ dk_group_user }}"
        password: "{{ user_password | password_hash('sha512') }}"
        home: "{{ dk_config_folder }}"
        create_home: yes
        comment: Usuario gen√©rico
        shell: /bin/bash
        update_password: always

    - name: Set authorized key taken from file
      authorized_key:
        user: "{{ dk_name_user }}"
        state: present
        key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"

    - name: Allow {{ dk_name_user }} to have passwordless sudo
      lineinfile:
        dest: /etc/sudoers.d/{{ dk_name_user }}
        state: present
        create: yes
        line: "{{ dk_name_user }} ALL=(ALL) NOPASSWD: ALL"
        validate: 'visudo -cf %s'